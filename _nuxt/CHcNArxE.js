import{aB as S}from"./7PQ9d4dP.js";function A(t){if(!Number.isSafeInteger(t)||t<0)throw new Error(`positive integer expected, not ${t}`)}function O(t){return t instanceof Uint8Array||t!=null&&typeof t=="object"&&t.constructor.name==="Uint8Array"}function E(t,...n){if(!O(t))throw new Error("Uint8Array expected");if(n.length>0&&!n.includes(t.length))throw new Error(`Uint8Array expected of length ${n}, not of length=${t.length}`)}function rt(t){if(typeof t!="function"||typeof t.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");A(t.outputLen),A(t.blockLen)}function ot(t,n=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(n&&t.finished)throw new Error("Hash#digest() has already been called")}function st(t,n){E(t);const e=n.outputLen;if(t.length<e)throw new Error(`digestInto() expects output buffer of length at least ${e}`)}const _=BigInt(2**32-1),L=BigInt(32);function B(t,n=!1){return n?{h:Number(t&_),l:Number(t>>L&_)}:{h:Number(t>>L&_)|0,l:Number(t&_)|0}}function C(t,n=!1){let e=new Uint32Array(t.length),f=new Uint32Array(t.length);for(let u=0;u<t.length;u++){const{h:g,l:b}=B(t[u],n);[e[u],f[u]]=[g,b]}return[e,f]}const k=(t,n)=>BigInt(t>>>0)<<L|BigInt(n>>>0),T=(t,n,e)=>t>>>e,I=(t,n,e)=>t<<32-e|n>>>e,N=(t,n,e)=>t>>>e|n<<32-e,j=(t,n,e)=>t<<32-e|n>>>e,V=(t,n,e)=>t<<64-e|n>>>e-32,$=(t,n,e)=>t>>>e-32|n<<64-e,P=(t,n)=>n,R=(t,n)=>t,D=(t,n,e)=>t<<e|n>>>32-e,M=(t,n,e)=>n<<e|t>>>32-e,F=(t,n,e)=>n<<e-32|t>>>64-e,K=(t,n,e)=>t<<e-32|n>>>64-e;function q(t,n,e,f){const u=(n>>>0)+(f>>>0);return{h:t+e+(u/2**32|0)|0,l:u|0}}const z=(t,n,e)=>(t>>>0)+(n>>>0)+(e>>>0),G=(t,n,e,f)=>n+e+f+(t/2**32|0)|0,J=(t,n,e,f)=>(t>>>0)+(n>>>0)+(e>>>0)+(f>>>0),Q=(t,n,e,f,u)=>n+e+f+u+(t/2**32|0)|0,W=(t,n,e,f,u)=>(t>>>0)+(n>>>0)+(e>>>0)+(f>>>0)+(u>>>0),X=(t,n,e,f,u,g)=>n+e+f+u+g+(t/2**32|0)|0,it={fromBig:B,split:C,toBig:k,shrSH:T,shrSL:I,rotrSH:N,rotrSL:j,rotrBH:V,rotrBL:$,rotr32H:P,rotr32L:R,rotlSH:D,rotlSL:M,rotlBH:F,rotlBL:K,add:q,add3L:z,add3H:G,add4L:J,add4H:Q,add5H:X,add5L:W},x=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */const ft=t=>new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4)),ct=t=>new DataView(t.buffer,t.byteOffset,t.byteLength),ut=(t,n)=>t<<32-n|t>>>n,lt=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68,Y=t=>t<<24&4278190080|t<<8&16711680|t>>>8&65280|t>>>24&255;function at(t){for(let n=0;n<t.length;n++)t[n]=Y(t[n])}function Z(t){if(typeof t!="string")throw new Error(`utf8ToBytes expected string, got ${typeof t}`);return new Uint8Array(new TextEncoder().encode(t))}function tt(t){return typeof t=="string"&&(t=Z(t)),E(t),t}function ht(...t){let n=0;for(let f=0;f<t.length;f++){const u=t[f];E(u),n+=u.length}const e=new Uint8Array(n);for(let f=0,u=0;f<t.length;f++){const g=t[f];e.set(g,u),u+=g.length}return e}class pt{clone(){return this._cloneInto()}}function yt(t){const n=f=>t().update(tt(f)).digest(),e=t();return n.outputLen=e.outputLen,n.blockLen=e.blockLen,n.create=()=>t(),n}function gt(t=32){if(x&&typeof x.getRandomValues=="function")return x.getRandomValues(new Uint8Array(t));throw new Error("crypto.getRandomValues must be defined")}var H={exports:{}};(function(t){var n=Object.prototype.hasOwnProperty,e="~";function f(){}Object.create&&(f.prototype=Object.create(null),new f().__proto__||(e=!1));function u(c,o,s){this.fn=c,this.context=o,this.once=s||!1}function g(c,o,s,i,y){if(typeof s!="function")throw new TypeError("The listener must be a function");var p=new u(s,i||c,y),l=e?e+o:o;return c._events[l]?c._events[l].fn?c._events[l]=[c._events[l],p]:c._events[l].push(p):(c._events[l]=p,c._eventsCount++),c}function b(c,o){--c._eventsCount===0?c._events=new f:delete c._events[o]}function h(){this._events=new f,this._eventsCount=0}h.prototype.eventNames=function(){var o=[],s,i;if(this._eventsCount===0)return o;for(i in s=this._events)n.call(s,i)&&o.push(e?i.slice(1):i);return Object.getOwnPropertySymbols?o.concat(Object.getOwnPropertySymbols(s)):o},h.prototype.listeners=function(o){var s=e?e+o:o,i=this._events[s];if(!i)return[];if(i.fn)return[i.fn];for(var y=0,p=i.length,l=new Array(p);y<p;y++)l[y]=i[y].fn;return l},h.prototype.listenerCount=function(o){var s=e?e+o:o,i=this._events[s];return i?i.fn?1:i.length:0},h.prototype.emit=function(o,s,i,y,p,l){var v=e?e+o:o;if(!this._events[v])return!1;var r=this._events[v],d=arguments.length,w,a;if(r.fn){switch(r.once&&this.removeListener(o,r.fn,void 0,!0),d){case 1:return r.fn.call(r.context),!0;case 2:return r.fn.call(r.context,s),!0;case 3:return r.fn.call(r.context,s,i),!0;case 4:return r.fn.call(r.context,s,i,y),!0;case 5:return r.fn.call(r.context,s,i,y,p),!0;case 6:return r.fn.call(r.context,s,i,y,p,l),!0}for(a=1,w=new Array(d-1);a<d;a++)w[a-1]=arguments[a];r.fn.apply(r.context,w)}else{var U=r.length,m;for(a=0;a<U;a++)switch(r[a].once&&this.removeListener(o,r[a].fn,void 0,!0),d){case 1:r[a].fn.call(r[a].context);break;case 2:r[a].fn.call(r[a].context,s);break;case 3:r[a].fn.call(r[a].context,s,i);break;case 4:r[a].fn.call(r[a].context,s,i,y);break;default:if(!w)for(m=1,w=new Array(d-1);m<d;m++)w[m-1]=arguments[m];r[a].fn.apply(r[a].context,w)}}return!0},h.prototype.on=function(o,s,i){return g(this,o,s,i,!1)},h.prototype.once=function(o,s,i){return g(this,o,s,i,!0)},h.prototype.removeListener=function(o,s,i,y){var p=e?e+o:o;if(!this._events[p])return this;if(!s)return b(this,p),this;var l=this._events[p];if(l.fn)l.fn===s&&(!y||l.once)&&(!i||l.context===i)&&b(this,p);else{for(var v=0,r=[],d=l.length;v<d;v++)(l[v].fn!==s||y&&!l[v].once||i&&l[v].context!==i)&&r.push(l[v]);r.length?this._events[p]=r.length===1?r[0]:r:b(this,p)}return this},h.prototype.removeAllListeners=function(o){var s;return o?(s=e?e+o:o,this._events[s]&&b(this,s)):(this._events=new f,this._eventsCount=0),this},h.prototype.off=h.prototype.removeListener,h.prototype.addListener=h.prototype.on,h.prefixed=e,h.EventEmitter=h,t.exports=h})(H);var et=H.exports;const vt=S(et);export{vt as E,pt as H,E as a,at as b,D as c,K as d,ot as e,M as f,ct as g,ut as h,lt as i,rt as j,it as k,gt as l,ht as m,A as n,st as o,F as r,C as s,tt as t,ft as u,yt as w};
